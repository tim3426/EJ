USE [ejdevo]
GO
/****** Object:  StoredProcedure [dbo].[USP_DATALIST_ADHOCQUERY_0DFCC368_5611_440E_B535_D51535F481E5]    Script Date: 05-Sep-19 5:43:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER procedure [dbo].[USP_DATALIST_ADHOCQUERY_0DFCC368_5611_440E_B535_D51535F481E5](
	@CURRENTAPPUSERID uniqueidentifier,
	@SECURITYFEATUREID uniqueidentifier,
	@SECURITYFEATURETYPE tinyint,
	@MAXROWS int = 100000) as
set nocount on;
with
[ROOT_CTE] as (
SELECT *
FROM (
	SELECT DISTINCT 
		CASE WHEN R.CONSTITUENTID IS NOT NULL THEN R.CONSTITUENTID ELSE R.CONSTITUENTID END AS [Constituent ID]
		,[C].[LOOKUPID] [LOOKUP ID]
		,CASE WHEN R.NAME IS NOT NULL THEN R.NAME ELSE C.NAME END AS [Name]
		,[ADDSAL].PRIMARYADDRESSEE [ADDRESSEE]
		,[ADDSAL].PRIMARYSALUTATION [SALUTATION]
		,[C].[SORT_NAME] AS [SORT]
		--categorize donors according to three types of profile
		,CASE WHEN [R].[EFFECTIVEDATE] = [C].FIRSTGIFT_DATE AND [R].[AMOUNT] >= 250 THEN '$250+ first time donor' 
			WHEN [R].[AMOUNT] > = 500 THEN '$500+ donor' WHEN [R].[AMOUNT] BETWEEN 250 AND 499.9999 AND [VELOCITY].[AMOUNT] < R.AMOUNT THEN 'Velocity donor' 
			WHEN [R].[TYPE] IN ('Donor Advised', 'Family Foundation', 'Third Party - Donor', 'Workplace - Employee', 'Business') AND R.AMOUNT >= 250 THEN 'Other giving vehicle donor' 
			ELSE NULL 
			END AS [CATEGORY]
		,CASE WHEN [R].[EFFECTIVEDATE] = [C].FIRSTGIFT_DATE AND [R].[AMOUNT] >= 250 THEN 5 
			WHEN [R].[AMOUNT] > = 500 THEN 4 WHEN [R].[AMOUNT] BETWEEN 250 AND 499.9999 AND [VELOCITY].[AMOUNT] < [R].[AMOUNT] THEN 3 
			WHEN [R].[TYPE] IN ('Donor Advised', 'Family Foundation', 'Third Party - Donor', 'Workplace - Employee', 'Business') AND R.AMOUNT >= 250 THEN 1 
			ELSE NULL 
			END AS [CATEGORY_SORT]
		,[C].[STATE] AS [STATE]
		,CASE WHEN [Do Not Email].ID IS NULL THEN C.EMAIL ELSE NULL END AS [EMAIL]
		,CASE WHEN [Do Not Call].ID IS NULL THEN C.PHONE ELSE NULL END AS [PHONE]
		,[R].[AMOUNT] [GIFT AMOUNT]
		,[R].[EFFECTIVEDATE] [GIFT DATE]
		,CASE WHEN [PG] = 1 THEN 'PG' ELSE NULL END AS [PG]
		,CASE WHEN [AMICUS] = 1 THEN 'Amicus' ELSE NULL END AS [AMICUS]
		,[R].TYPE [Gift Type]
		,[C].ANNUAL_SUMMARY_CASH_YEAR_0 [Current Fiscal Total]
		,[R].[REVENUEID] [REVENUE ID]
			,null [SPLIT ID]
		,[RR].[BASECURRENCYID] as 	[Base currency ID]
	FROM EJ_REVENUE_RECOGNITION AS R
	LEFT OUTER JOIN REVENUERECOGNITION AS RR ON RR.REVENUESPLITID = R.SPLITID
	LEFT OUTER JOIN EJ_CONSTITUENT_HISTORY AS [C] ON [C].CONSTITUENTID = R.CONSTITUENTID
		AND C.Inactive = '0'
		AND C.Deceased = '0'
	LEFT OUTER JOIN [dbo].[V_QUERY_ADDRESSEE_SALUTATION] AS [ADDSAL] ON [C].[CONSTITUENTID] = [ADDSAL].[ID]
	LEFT OUTER JOIN dbo.[UFN_ADHOCQUERYIDSET_C6AC16C9_3522_4587_A610_19FA7F754C11]() AS [Anonymous] ON R.CONSTITUENTID = [Anonymous].ID
	LEFT OUTER JOIN dbo.[UFN_ADHOCQUERYIDSET_F524CA2C_5E71_47ED_9049_71C79D1226F7]() AS [Do Not Contact] ON [C].[CONSTITUENTID] = [Do Not Contact].ID
	LEFT OUTER JOIN dbo.[UFN_ADHOCQUERYIDSET_71B9837E_32F7_4D66_BBAC_53A36F3731F9]() AS [Do Not Call] ON [C].[CONSTITUENTID] = [Do Not Call].ID
	LEFT OUTER JOIN dbo.[UFN_ADHOCQUERYIDSET_8367E7CC_AEA4_4C6A_B9D0_3CC48D753C9D]() AS [Do Not Email] ON [C].[CONSTITUENTID] = [Do Not Email].ID
	LEFT OUTER JOIN dbo.[UFN_ADHOCQUERYIDSET_820A57EA_12DE_48AF_A218_E44F24FC4C70]() AS [MG Managed] ON [C].[CONSTITUENTID] = [MG Managed].ID
	LEFT OUTER JOIN (
		SELECT Z.[CONSTITUENTID]
		FROM (
			--select IG donors 
			SELECT C.CONSTITUENTID [CONSTITUENTID]
			FROM EJ_CONSTITUENT_HISTORY [C]
			WHERE [C].ANNUAL_SUMMARY_CASH_YEAR_0 >= 1000
				OR [C].ANNUAL_SUMMARY_CASH_YEAR_1 >= 1000
			
			UNION
			
			SELECT CONSTITUENCY.ID [CONSTITUENTID]
			FROM dbo.[UFN_ADHOCQUERYIDSET_40D3DB72_42CF_410D_8FC6_1FC89936810B]() AS [CONSTITUENCY]
			) AS Z
		) AS [IG] ON IG.CONSTITUENTID = R.CONSTITUENTID
	LEFT OUTER JOIN (
		--Pull the sum of revenue in this fiscal year before the most recent gift
		SELECT DISTINCT [Z].[CONSTITUENTID] [CONSTITUENTID]
			,[Z].[DATE] [DATE]
			,sum([R].[AMOUNT]) [AMOUNT]
		FROM (
			SELECT [R].[CONSTITUENTID] [CONSTITUENTID]
				,C.LASTGIFT_DATE [DATE]
			FROM [EJ_REVENUE_RECOGNITION] [R]
			LEFT OUTER JOIN EJ_CONSTITUENT_HISTORY C ON C.CONSTITUENTID = R.CONSTITUENTID
			WHERE [R].[EFFECTIVEDATE] BETWEEN convert(DATETIME, CONCAT (CASE WHEN month(getDate()) > 6 THEN year(getDate()) - 3 ELSE year(getDate()) - 2 END,'-07-01T00:00:00.000'
								))
					AND C.LASTGIFT_DATE
			GROUP BY [R].[CONSTITUENTID]
				,C.LASTGIFT_DATE
			) [Z]
		LEFT OUTER JOIN [EJ_REVENUE_RECOGNITION] [R] ON [Z].[CONSTITUENTID] = [R].[CONSTITUENTID]
			AND [R].[EFFECTIVEDATE] = [Z].[DATE]
		GROUP BY [Z].[CONSTITUENTID]
			,[Z].[DATE]
		) [VELOCITY] ON [VELOCITY].[CONSTITUENTID] = [R].[CONSTITUENTID]
	LEFT OUTER JOIN (
		--select completed acknowledgements
		SELECT [I].[ACTUALDATE] AS [COMPLETEDATE]
			,[I].[ID] AS [INTID]
			,[I].[CONSTITUENTID] [CONSTITUENTID]
			,[I].CONTACTMETHOD [CONTACTMETHOD]
			,1 [COMPLETED]
		FROM [V_QUERY_INTERACTIONALL] I
		WHERE [I].[CATEGORY_TRANSLATION] = 'Stewardship'
			AND [I].[SUBCATEGORY_TRANSLATION] = 'Acknowledgement'
			AND [I].[ACTUALDATE] >= dateadd(MONTH, - 1, getdate())
		) AS [INTERACTIONDONE] ON [INTERACTIONDONE].[CONSTITUENTID] = C.CONSTITUENTID
		AND [INTERACTIONDONE].[COMPLETEDATE] > R.[EFFECTIVEDATE]
		AND [INTERACTIONDONE].[CONTACTMETHOD] IN ('Call To', 'Email To', 'Phone', 'Email / Online')
	WHERE RR.DATEADDED >= dateadd(month, - 2, getdate())
		AND RR.DATEADDED <= dateadd(day, - 4, getdate())
		--((R.APPLICATION = 'Donation' and R.AMOUNT >= 250) or (R.APPLICATION = 'Recurring gift'))
		--RR.CATEGORY = 'Public Support'
		AND [INTERACTIONDONE].[COMPLETED] IS NULL
		AND Anonymous.ID IS NULL
		AND IG.CONSTITUENTID IS NULL
		AND [Do Not Contact].ID IS NULL
		AND [MG Managed].ID IS NULL


UNION 
--select sustainer upgrades
	SELECT DISTINCT 
		CASE WHEN REV.CONSTITUENTID IS NOT NULL THEN REV.CONSTITUENTID ELSE REV.CONSTITUENTID END AS [Constituent ID]
		,[C].[LOOKUPID] [LOOKUP ID]
		,C.NAME AS [Name]
		,[ADDSAL].PRIMARYADDRESSEE [ADDRESSEE]
		,[ADDSAL].PRIMARYSALUTATION [SALUTATION]
		,[C].[SORT_NAME] AS [SORT]
		,CASE 
			WHEN [Recurring].[AMOUNTCHANGE] > 0 AND ([Recurring].[TRANSACTIONDATE] >= dateadd(MONTH, - 1, getdate())) THEN 'Sustainer Upgrade' 
			ELSE NULL 
			END AS [CATEGORY]
		,CASE 
			WHEN [Recurring].[AMOUNTCHANGE] > 0 AND ([Recurring].[TRANSACTIONDATE] >= dateadd(MONTH, - 1, getdate())) THEN 2 
			ELSE NULL 
			END AS [CATEGORY_SORT]
		,[C].[STATE] AS [STATE]
		,CASE WHEN [Do Not Email].ID IS NULL THEN C.EMAIL ELSE NULL END AS [EMAIL]
		,CASE WHEN [Do Not Call].ID IS NULL THEN C.PHONE ELSE NULL END AS [PHONE]
		,[REV].[AMOUNT] [GIFT AMOUNT]
		,[REV].[DATE] [GIFT DATE]
		,CASE WHEN [PG] = 1 THEN 'PG' ELSE NULL END AS [PG]
		,CASE WHEN [AMICUS] = 1 THEN 'Amicus' ELSE NULL END AS [AMICUS]
		,[RECURRING].FREQUENCY AS [TYPE]
		,[C].ANNUAL_SUMMARY_CASH_YEAR_0 [Current Fiscal Total]
		,[REV].[ID] [REVENUE ID]
		,null [SPLIT ID]
		,[REV].[BASECURRENCYID] as 	[Base currency ID]
	FROM
	[dbo].[V_QUERY_RECURRINGGIFTDEVELOPMENTFUNCTIONHISTORY] AS [Recurring]
	INNER JOIN V_QUERY_REVENUE AS [REV] ON [REV].[ID] = [Recurring].[REVENUEID]
		AND [Recurring].[AMOUNTCHANGE] > 0
		AND [Recurring].AMOUNT >= 50
		AND [Recurring].TRANSACTIONDATE >= dateadd(MONTH, - 6, getdate())
	LEFT OUTER JOIN EJ_CONSTITUENT_HISTORY AS [C] ON [C].CONSTITUENTID = REV.CONSTITUENTID
		AND C.Inactive = '0'
		AND C.Deceased = '0'
	LEFT OUTER JOIN [dbo].[V_QUERY_ADDRESSEE_SALUTATION] AS [ADDSAL] ON [C].[CONSTITUENTID] = [ADDSAL].[ID]
	LEFT OUTER JOIN dbo.[UFN_ADHOCQUERYIDSET_C6AC16C9_3522_4587_A610_19FA7F754C11]() AS [Anonymous] ON REV.CONSTITUENTID = [Anonymous].ID
	LEFT OUTER JOIN dbo.[UFN_ADHOCQUERYIDSET_F524CA2C_5E71_47ED_9049_71C79D1226F7]() AS [Do Not Contact] ON [C].[CONSTITUENTID] = [Do Not Contact].ID
	LEFT OUTER JOIN dbo.[UFN_ADHOCQUERYIDSET_71B9837E_32F7_4D66_BBAC_53A36F3731F9]() AS [Do Not Call] ON [C].[CONSTITUENTID] = [Do Not Call].ID
	LEFT OUTER JOIN dbo.[UFN_ADHOCQUERYIDSET_8367E7CC_AEA4_4C6A_B9D0_3CC48D753C9D]() AS [Do Not Email] ON [C].[CONSTITUENTID] = [Do Not Email].ID
	LEFT OUTER JOIN dbo.[UFN_ADHOCQUERYIDSET_820A57EA_12DE_48AF_A218_E44F24FC4C70]() AS [MG Managed] ON [C].[CONSTITUENTID] = [MG Managed].ID
	LEFT OUTER JOIN (
		SELECT Z.[CONSTITUENTID]
		FROM (
			--select IG donors 
			SELECT C.CONSTITUENTID [CONSTITUENTID]
			FROM EJ_CONSTITUENT_HISTORY [C]
			WHERE [C].ANNUAL_SUMMARY_CASH_YEAR_0 >= 1000
				OR [C].ANNUAL_SUMMARY_CASH_YEAR_1 >= 1000
			
			UNION
			
			SELECT CONSTITUENCY.ID [CONSTITUENTID]
			FROM dbo.[UFN_ADHOCQUERYIDSET_40D3DB72_42CF_410D_8FC6_1FC89936810B]() AS [CONSTITUENCY]
			) AS Z
		) AS [IG] ON IG.CONSTITUENTID = REV.CONSTITUENTID
	LEFT OUTER JOIN (
		--select completed acknowledgements
		SELECT [I].[ACTUALDATE] AS [COMPLETEDATE]
			,[I].[ID] AS [INTID]
			,[I].[CONSTITUENTID] [CONSTITUENTID]
			,[I].CONTACTMETHOD [CONTACTMETHOD]
			,1 [COMPLETED]
		FROM [V_QUERY_INTERACTIONALL] I
		WHERE [I].[CATEGORY_TRANSLATION] = 'Stewardship'
			AND [I].[SUBCATEGORY_TRANSLATION] = 'Acknowledgement'
			AND [I].[ACTUALDATE] >= dateadd(MONTH, - 1, getdate())
		) AS [INTERACTIONDONE] ON [INTERACTIONDONE].[CONSTITUENTID] = C.CONSTITUENTID
		AND [INTERACTIONDONE].[COMPLETEDATE] > REV.[DATE]
		AND [INTERACTIONDONE].[CONTACTMETHOD] IN ('Call To', 'Email To', 'Phone', 'Email / Online')

	WHERE REV.DATECHANGED >= dateadd(month, - 2, getdate())
		AND REV.DATECHANGED <= dateadd(day, - 4, getdate())
		AND [INTERACTIONDONE].[COMPLETED] IS NULL
		AND Anonymous.ID IS NULL
		AND IG.CONSTITUENTID IS NULL
		AND [Do Not Contact].ID IS NULL
		AND [MG Managed].ID IS NULL

	) AS Y
WHERE CATEGORY_SORT BETWEEN 1 AND 5
	AND (Y.PHONE IS NOT NULL OR Y.EMAIL IS NOT NULL)
)


select top(@MAXROWS) [Constituent ID],
	[Name],
	[Addressee],
	[Salutation],
	[Sort],
	[Category],
	[Category_SORT],
	[State],
	[Email],
	[Phone],
	[Gift amount],
	[Gift date],
	[PG],
	[Amicus],
	[Gift type],
	[Current Fiscal Total],
	[Revenue ID],
	[Split ID],
	[Base currency ID]
from [ROOT_CTE] as QUERYRESULTS


